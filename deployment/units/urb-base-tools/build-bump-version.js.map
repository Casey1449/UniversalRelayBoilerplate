{"version":3,"sources":["../../../units/urb-base-tools/build-bump-version.js"],"names":["require","load","console","log","process","env","npm_package_version","arrVersion","split","versionBuildNumber","newVersion","fileName","searchString","newContentOfLine","fileLines","readFileSync","index","length","indexOf","writeFileSync","join"],"mappings":"AAAA,sB;;AAEA,qD;;;AAGAA,QAAS,QAAT,EAAoBC,IAApB;;AAEAC,QAAQC,GAAR;AACE,oCAAsCC,QAAQC,GAAR,CAAYC,mBADpD;;AAGAJ,QAAQC,GAAR,CAAa,oDAAb;;AAEA,GAAMI,YAAa,iBAAQC,KAAR,CAAe,GAAf,CAAnB;AACA,GAAIC,oBAAqBF,WAAW,CAAX,CAAzB;;AAEA,GAAKE,oBAAsB,IAA3B,CAAkCA,mBAAqB,CAAC,CAAtB;;AAElC;AACEL,QAAQC,GAAR,CAAYC,mBAAZ;AACAC,WAAW,CAAX,EAAgB,GAAhB,CAAsBA,WAAW,CAAX,CAAtB,CAAsC,GAAtC,CAA4CA,WAAW,CAAX,CAF9C;;AAIEE,mBAAqB,CAAC,CAAtB;;;AAGFA;AACA,GAAMC,YAAaN,QAAQC,GAAR,CAAYC,mBAAZ,CAAkC,GAAlC,CAAwCG,kBAA3D;;AAEA,GAAME,UAAW,mCAAjB;AACA,GAAMC,cAAe,yBAArB;AACA,GAAMC,kBAAmB,4BAA8BH,UAA9B,CAA2C,IAApE;;AAEA,GAAII,WAAY,aAAGC,YAAH,CAAiBJ,QAAjB,CAA2B,MAA3B,EAAoCH,KAApC,CAA2C,IAA3C,CAAhB;AACA,GAAIQ,OAAQ,CAAZ;;AAEA,MAAQA,MAAQF,UAAUG,MAA1B,CAAmC;AACjC,GAAKH,UAAUE,KAAV,EAAiBE,OAAjB,CAA0BN,YAA1B,EAA2C,CAAC,CAAjD,CAAqD;AACnD,GAAKE,UAAUE,KAAV,IAAqBH,gBAA1B;AACEX,QAAQC,GAAR,CAAa,IAAMQ,QAAN,CAAiB,yBAA9B,EADF;AAEK;AACHG,UAAUE,KAAV,EAAmBH,gBAAnB;AACA,aAAGM,aAAH,CAAkBR,QAAlB,CAA4BG,UAAUM,IAAV,CAAgB,IAAhB,CAA5B;;AAEAlB,QAAQC,GAAR,CAAa,oCAAsCO,UAAnD;AACD;AACD;AACD,CAVD,IAUOM;AACR","file":"build-bump-version.js","sourcesContent":["import fs from 'fs'\n\nimport { version } from '../_configuration/package.js'\n\n// Read environment\nrequire( 'dotenv' ).load()\n\nconsole.log(\n  'Current version in package.json: ' + process.env.npm_package_version\n)\nconsole.log( 'Current version in package.js:   ' + version )\n\nconst arrVersion = version.split( '.' )\nlet versionBuildNumber = arrVersion[3]\n\nif ( versionBuildNumber == null ) versionBuildNumber = -1\n\nif (\n  process.env.npm_package_version !=\n  arrVersion[0] + '.' + arrVersion[1] + '.' + arrVersion[2]\n)\n  versionBuildNumber = -1\n\n// Increment build\nversionBuildNumber++\nconst newVersion = process.env.npm_package_version + '.' + versionBuildNumber\n\nconst fileName = './units/_configuration/package.js'\nconst searchString = 'export const version = '\nconst newContentOfLine = 'export const version = \\'' + newVersion + '\\''\n\nlet fileLines = fs.readFileSync( fileName, 'utf8' ).split( '\\n' )\nlet index = 0\n\nwhile ( index < fileLines.length ) {\n  if ( fileLines[index].indexOf( searchString ) > -1 ) {\n    if ( fileLines[index] === newContentOfLine )\n      console.log( '[' + fileName + '] is already up to date' )\n    else {\n      fileLines[index] = newContentOfLine\n      fs.writeFileSync( fileName, fileLines.join( '\\n' ) )\n\n      console.log( 'New version in package.js:       ' + newVersion )\n    }\n    break\n  } else index++\n}\n"]}