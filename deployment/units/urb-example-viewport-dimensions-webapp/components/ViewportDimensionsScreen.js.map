{"version":3,"sources":["../../../../units/urb-example-viewport-dimensions-webapp/components/ViewportDimensionsScreen.jsx"],"names":["styles","card","minWidth","ViewportDimensionsScreen","props","classes","totalHeight","totalWidth","data","name","value","map","n","Component"],"mappings":";;AAEA,sC;AACA;AACA,wC;;;;;;AAMA,4B;AACA;;AAEA,6F;AACA,4F;;AAEA,GAAMA,QAAS;AACbC,KAAM;AACJC,SAAU,GADN,CADO,CAAf,C;;;;AAMMC,wB;;;;;;AAMK;AACsC,KAAKC,KAD3C,CACCC,OADD,QACCA,OADD,CACUC,WADV,QACUA,WADV,CACuBC,UADvB,QACuBA,UADvB;;AAGP,GAAMC,MAAO;AACX,CAAEC,KAAM,YAAR,CAAsBC,MAAOH,UAA7B,CADW;AAEX,CAAEE,KAAM,aAAR,CAAuBC,MAAOJ,WAA9B,CAFW,CAAb;;;AAKA;AACE;AACE,8CAAM,UAAWD,QAAQJ,IAAzB;AACE,gDAAY,MAAM,qBAAlB,EADF;AAEE;AACE;AACE;AACE,+DADF;AAEE,gDAAW,YAAX,UAFF,CADF,CADF;;;AAOE;AACGO,KAAKG,GAAL,CAAU,WAAK;AACd;AACE,+CAAU,IAAKC,EAAEH,IAAjB;AACE,oDAAYG,EAAEH,IAAd,CADF;AAEE,gDAAW,YAAX,EAAoBG,EAAEF,KAAtB,CAFF,CADF;;;AAMD,CAPA,CADH,CAPF,CAFF;;;AAoBE,qDApBF,CADF,CADF;;;;AA0BD,C,sCAxCoC,gBAAMG,S;;;AA2C9B;AACb,uBAAYb,MAAZ;AACE,qCAAwBG,wBAAxB,CAAkD;AAChD,aADgD;AAEhD,YAFgD,CAAlD,CADF,CADa,wG","file":"ViewportDimensionsScreen.js","sourcesContent":["// @flow\n\nimport Card, { CardContent, CardHeader } from 'material-ui/Card'\nimport { withStyles } from 'material-ui/styles'\nimport Table, {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from 'material-ui/Table'\nimport React from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\n\nimport ResponsiveContentArea from '../../urb-base-webapp/components/ResponsiveContentArea'\nimport withViewportDimensions from '../../urb-base-webapp/scripts/withViewportDimensions'\n\nconst styles = {\n  card: {\n    minWidth: 275,\n  },\n}\n\nclass ViewportDimensionsScreen extends React.Component<{\n  classes: Object,\n  totalWidth: number,\n  totalHeight: number,\n  Viewer: Object\n}> {\n  render() {\n    const { classes, totalHeight, totalWidth } = this.props\n\n    const data = [\n      { name: 'totalWidth', value: totalWidth },\n      { name: 'totalHeight', value: totalHeight },\n    ]\n\n    return (\n      <ResponsiveContentArea>\n        <Card className={classes.card}>\n          <CardHeader title=\"Viewport Dimensions\" />\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Property</TableCell>\n                <TableCell numeric>Value</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map( n => {\n                return (\n                  <TableRow key={n.name}>\n                    <TableCell>{n.name}</TableCell>\n                    <TableCell numeric>{n.value}</TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n          <CardContent />\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )(\n    withViewportDimensions( ViewportDimensionsScreen, [\n      'totalHeight',\n      'totalWidth',\n    ])\n  ),\n  graphql`\n    fragment ViewportDimensionsScreen_Viewer on Viewer {\n      id\n    }\n  `\n)\n"]}