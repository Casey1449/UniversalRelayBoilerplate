{"version":3,"sources":["../../../../../units/urb-example-inscriptio-server/graphql/mutation/InscriptioAdd.js"],"names":["name","inputFields","Inscriptio_LocationLat","type","Inscriptio_LocationLon","Inscriptio_Notes","outputFields","InscriptiosEdge","edgeType","resolve","local_id","context","rootValue","objectManager","args","an_Object","getOneObject","id","arr","getObjectList","Inscriptio_User_id","getViewerUserId","cursor","cursorForObjectInConnection","node","Viewer","parent","mutateAndGetPayload","add"],"mappings":";;AAEA;AACA;;AAEA,sE;AACA,uF,yWANA;;AAQe,gDAA6B;AAC1CA,QAAM,eADoC;;AAG1CC,eAAa;AACXC,4BAAwB,EAAEC,MAAM,mDAAR,EADb;AAEXC,4BAAwB,EAAED,MAAM,mDAAR,EAFb;AAGXE,sBAAkB,EAAEF,MAAM,mDAAR,EAHP,EAH6B;;;AAS1CG,gBAAc;AACZC,qBAAiB;AACfJ,YAAM,gCAAsBK,QADb;AAEfC,eAAS;AACP,QAAEC,QAAF,EADO;;AAGPC,aAHO;AAIP,QAAEC,WAAWC,aAAb,EAJO;AAKJ,WAHEC,IAGF;AACH,cAAMC,YAAY,MAAMF,cAAcG,YAAd,CAA4B,YAA5B,EAA0C;AAChEC,cAAIP,QAD4D,EAA1C,CAAxB;;;AAIA,cAAMQ,MAAM,MAAML,cAAcM,aAAd,CAA6B,YAA7B,EAA2C;AAC3DC,8BAAoBP,cAAcQ,eAAd,EADuC,EAA3C,CAAlB;;;AAIA,eAAO;AACLC,kBAAQT,cAAcU,2BAAd;AACN,sBADM;AAENL,aAFM;AAGNH,mBAHM,CADH;;AAMLS,gBAAMT,SAND,EAAP;;AAQD,OAxBc,EADL;;;AA4BZU,YAAQ;AACNtB,gCADM;AAENM,eAAS,CAAEiB,MAAF,EAAUZ,IAAV,EAAgBH,OAAhB,EAAyB,EAAEC,WAAWC,aAAb,EAAzB;AACPA,oBAAcG,YAAd,CAA4B,MAA5B,EAAoC;AAClCC,YAAIJ,cAAcQ,eAAd,EAD8B,EAApC,CAHI,EA5BI,EAT4B;;;;;AA8C1CM,uBAAqB;AACnB,IAAEzB,sBAAF,EAA0BE,sBAA1B,EAAkDC,gBAAlD,EADmB;AAEnBM,SAFmB;AAGnB,IAAEC,WAAWC,aAAb,EAHmB;AAIhB;AACH,UAAMH,WAAW,MAAMG,cAAce,GAAd,CAAmB,YAAnB,EAAiC;AACtDR,0BAAoBP,cAAcQ,eAAd,EADkC;AAEtDnB,4BAFsD;AAGtDE,4BAHsD;AAItDC,sBAJsD,EAAjC,CAAvB;;AAMA,WAAO,EAAEK,QAAF,EAAP;AACD,GA1DyC,EAA7B,C","file":"InscriptioAdd.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport InscriptiosConnection from '../type/InscriptiosConnection'\nimport ViewerType from '../../../../units/urb-base-server/graphql/type/ViewerType'\n\nexport default mutationWithClientMutationId({\n  name: 'InscriptioAdd',\n\n  inputFields: {\n    Inscriptio_LocationLat: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_LocationLon: { type: new GraphQLNonNull( GraphQLString ) },\n    Inscriptio_Notes: { type: new GraphQLNonNull( GraphQLString ) },\n  },\n\n  outputFields: {\n    InscriptiosEdge: {\n      type: InscriptiosConnection.edgeType,\n      resolve: async(\n        { local_id },\n        { ...args },\n        context,\n        { rootValue: objectManager }\n      ) => {\n        const an_Object = await objectManager.getOneObject( 'Inscriptio', {\n          id: local_id,\n        })\n\n        const arr = await objectManager.getObjectList( 'Inscriptio', {\n          Inscriptio_User_id: objectManager.getViewerUserId(),\n        })\n\n        return {\n          cursor: objectManager.cursorForObjectInConnection(\n            'Inscriptio',\n            arr,\n            an_Object\n          ),\n          node: an_Object,\n        }\n      },\n    },\n\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject( 'User', {\n          id: objectManager.getViewerUserId(),\n        }),\n    },\n  },\n\n  mutateAndGetPayload: async(\n    { Inscriptio_LocationLat, Inscriptio_LocationLon, Inscriptio_Notes },\n    context,\n    { rootValue: objectManager }\n  ) => {\n    const local_id = await objectManager.add( 'Inscriptio', {\n      Inscriptio_User_id: objectManager.getViewerUserId(),\n      Inscriptio_LocationLat,\n      Inscriptio_LocationLon,\n      Inscriptio_Notes,\n    })\n    return { local_id }\n  },\n})\n"]}