{"version":3,"sources":["../../../units/urb-base-server/defaultRequestLoggerAuth.js"],"names":["defaultrequestLoggerAuth","requestAndResponse","logLevel","log"],"mappings":";;;;;;;AAOwBA,wB,CALxB,gDAEA,4B,yCACA,8C,wJAEe,SAASA,wBAAT,CAAmCC,kBAAnC,EAAwD;AACrE,MAAIC,WAAW,IAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,4BAAcD,kBAAd,0CAAL;AACEC,aAAW,MAAX;;AAEF,MAAKA,QAAL,EAAgB,cAAIC,GAAJ,CAASD,QAAT,EAAmB,cAAnB,EAAmCD,kBAAnC;AACjB,C,CApBD","file":"defaultRequestLoggerAuth.js","sourcesContent":["// @flow weak\n\nimport { debugWriteToLogServerRequestAuth } from '../_configuration/debug'\n\nimport log from './log'\nimport matchInDepth from './matchInDepth'\n\nexport default function defaultrequestLoggerAuth( requestAndResponse ) {\n  let logLevel = null\n\n  // TODO: What errors for Auth should be logged? definitily not 401.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if ( matchInDepth( requestAndResponse, debugWriteToLogServerRequestAuth ) )\n    logLevel = 'info'\n\n  if ( logLevel ) log.log( logLevel, 'Auth request', requestAndResponse )\n}\n"]}