{"version":3,"sources":["../../../../../units/urb-example-todo-server/graphql/type/_ViewerFields.js"],"names":["ToDos","type","connectionType","args","status","defaultValue","resolve","obj","context","rootValue","objectManager","arr","getObjectList","ToDo_User_id","getViewerUserId","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,oD,mXALA;;AAOe;AACbA,SAAO;AACLC,UAAM,0BAAgBC,cADjB;;AAGLC;AACEC,cAAQ;AACNH,oCADM;AAENI,sBAAc,KAFR,EADV,iCAHK;;;;;AAWLC,aAAS;AACPC,OADO;;AAGPC,WAHO;AAIP,MAAEC,WAAWC,aAAb,EAJO;AAKJ,SAHH,EAAEN,MAAF,EAGG,QAHUD,IAGV;AACH,YAAMQ,MAAM,MAAMD,cAAcE,aAAd,CAA6B,MAA7B,EAAqC;AACrDC,sBAAcH,cAAcI,eAAd,EADuC,EAArC,CAAlB;;;AAIA,aAAO;AACLH,UAAII,MAAJ;AACEC;AACEZ,iBAAW,KAAX;AACAY,aAAOC,aAAP,MAA2Bb,WAAW,WAAtC,CAHJ,CADK;;AAMLD,UANK,CAAP;;AAQD,KA7BI,EADM;;;AAiCbe,mBAAiB;AACfjB,6BADe;;AAGfK,aAAS;AACPC,OADO;;AAGPC,WAHO;AAIP,MAAEC,WAAWC,aAAb,EAJO;AAKJ,SAHEP,IAGF;AACH,YAAMQ,MAAM,MAAMD,cAAcE,aAAd,CAA6B,MAA7B,EAAqC;AACrDC,sBAAcH,cAAcI,eAAd,EADuC,EAArC,CAAlB;;;AAIA,aAAOH,IAAIQ,MAAX;AACD,KAdc,EAjCJ;;;AAkDbC,uBAAqB;AACnBnB,6BADmB;;AAGnBK,aAAS;AACPC,OADO;;AAGPC,WAHO;AAIP,MAAEC,WAAWC,aAAb,EAJO;AAKJ,SAHEP,IAGF;AACH,YAAMQ,MAAM,MAAMD,cAAcE,aAAd,CAA6B,MAA7B,EAAqC;AACrDC,sBAAcH,cAAcI,eAAd,EADuC,EAArC,CAAlB;;;AAIA,aAAOH,IAAII,MAAJ,CAAYC,UAAUA,OAAOC,aAA7B,EAA6CE,MAApD;AACD,KAdkB,EAlDR,E","file":"_ViewerFields.js","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from './ToDosConnection'\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n\n    resolve: async(\n      obj,\n      { status, ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList( 'ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return connectionFromArray(\n        arr.filter(\n          a_ToDo =>\n            status === 'any' ||\n            a_ToDo.ToDo_Complete === ( status === 'completed' )\n        ),\n        args\n      )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n\n    resolve: async(\n      obj,\n      { ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList( 'ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.length\n    },\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n\n    resolve: async(\n      obj,\n      { ...args },\n      context,\n      { rootValue: objectManager }\n    ) => {\n      const arr = await objectManager.getObjectList( 'ToDo', {\n        ToDo_User_id: objectManager.getViewerUserId(),\n      })\n\n      return arr.filter( a_ToDo => a_ToDo.ToDo_Complete ).length\n    },\n  },\n}\n"]}