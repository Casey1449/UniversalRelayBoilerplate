{"version":3,"sources":["../../../units/urb-base-webapp/client.js"],"names":["render","fetcher","window","__RELAY_PAYLOADS__","data","Viewer","UserToken2","resolver","historyProtocol","historyMiddlewares","routeConfig","Router","appData","document","getElementById","ssStyles","parentNode","removeChild"],"mappings":";;;AAGA;;AAEA,0D;AACA,4E;AACA,oD;AACA,4B;AACA,mC;;AAEA,8C;AACA;AACA,6C;;;AAGA,wD;;AAEA,GAAMA,QAAS,2BAAa,EAAb,CAAf;;;AAGC,CAAE;;AAEKC,OAFL,CAEe;AACd,UADc;AAEdC,OAAOC,kBAFO;AAGdD,OAAOC,kBAAP,CAA0B,CAA1B,EAA6BC,IAA7B,CAAkCC,MAAlC,CAAyCC,UAH3B,CAFf;;AAOKC,QAPL,CAOgB,2BAAgBN,OAAhB,CAPhB;;AASoB,uCAAyB;AAC5CO,gBAAiB,+BAD2B;AAE5CC,6CAF4C;AAG5CC,+BAH4C;AAI5CH,iBAJ4C;AAK5CP,aAL4C,CAAzB,CATpB,SASKW,MATL;;;AAiBD,mBAASX,MAAT;AACE,iDAAS,cAAe,CAAEY,QAASV,OAAOU,OAAlB,CAAxB;AACE,8BAAC,MAAD,EAAQ,SAAUL,QAAlB,EADF,CADF;;AAIEM,SAASC,cAAT,CAAyB,MAAzB,CAJF;AAKE,UAAM;;AAEJ,GAAMC,UAAWF,SAASC,cAAT,CAAyB,oBAAzB,CAAjB;;AAEAC,SAASC,UAAT,CAAoBC,WAApB,CAAiCF,QAAjC;AACD,CAVH,EAjBC,yDAAF","file":"client.js","sourcesContent":["// @flow\n\n// In order to use ES7 async/await\nimport 'babel-polyfill'\n\nimport BrowserProtocol from 'farce/lib/BrowserProtocol'\nimport createInitialFarceRouter from 'found/lib/createInitialFarceRouter'\nimport createRender from 'found/lib/createRender'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport FetcherClient from './fetcherClient'\nimport { createResolver, historyMiddlewares, routeConfig } from './router'\nimport Wrapper from './components/Wrapper'\n\n// Include global CSS used in all units. Will not be chunked\nimport '../_configuration/urb-base-webapp/global.css'\n\nconst render = createRender({})\n\n//\n;( async() => {\n  // eslint-disable-next-line no-underscore-dangle\n  const fetcher = new FetcherClient(\n    '/graphql',\n    window.__RELAY_PAYLOADS__,\n    window.__RELAY_PAYLOADS__[0].data.Viewer.UserToken2 // It is critical that the app frame has UserToken2 retrieved\n  )\n  const resolver = createResolver( fetcher )\n\n  const Router = await createInitialFarceRouter({\n    historyProtocol: new BrowserProtocol(),\n    historyMiddlewares,\n    routeConfig,\n    resolver,\n    render,\n  })\n\n  ReactDOM.render(\n    <Wrapper configuration={{ appData: window.appData }}>\n      <Router resolver={resolver} />\n    </Wrapper>,\n    document.getElementById( 'root' ),\n    () => {\n      // We don't need the static css any more once we have launched our application.\n      const ssStyles = document.getElementById( 'server-side-styles' )\n      // $FlowIssue it is guaranteed to be there\n      ssStyles.parentNode.removeChild( ssStyles )\n    }\n  )\n})()\n"]}