{"version":3,"sources":["../../../../units/urb-base-webapp/components/Wrapper.jsx"],"names":["Wrapper","Component","constructor","props","context","handle_onResize","rbCtx","viewportDimensions","siteConfiguration","muiTheme","componentDidMount","getChildContext","render","children","childContextTypes","object"],"mappings":";;AAEA,uC;AACA,8B;AACA,0D;AACA,uE;;AAEA,uF;AACA,qF;AACA,mE;;AAEe,MAAMA,OAAN,SAAsB,gBAAMC;;;AAGzC;;;;;;;;AAQAC,cAAaC,KAAb,EAA4BC,OAA5B,EAA8C;AAC5C,UAAOD,KAAP,EAAcC,OAAd;;AAEA;;AAEA;AAL4C;;;;;;;;;;;;;;;;;;AAwB9CC,mBAxB8C,GAwB5B,MAAM;AACtB,WAAKC,KAAL,CAAWC,kBAAX,CAA8BF,eAA9B;AACD,KA1B6C,CAM5C,KAAKC,KAAL,GAAa,+BAAiBH,MAAMK,iBAAvB,CAAb,CAEA,KAAKF,KAAL,CAAWC,kBAAX,GAAgC,kCAAhC,CACA,KAAKD,KAAL,CAAWE,iBAAX,GAA+BL,MAAMK,iBAArC,CAEA,KAAKC,QAAL,GAAgB,8BAAgB,IAAhB,CAAhB,CACD,CAEDC,oBAAoB,CAClB,KAAKL,eAAL,GADkB,CACK;AACxB,GAEDM,kBAAkB,CAChB,OAAO,EACLL,OAAO,KAAKA,KADP,EAAP,CAGD;AAMDM,WAAS;AACP;AACE,oEAAe,QAAO,QAAtB,EAA+B,UAAU,KAAKP,eAA9C;AACE,oEAAkB,OAAO,KAAKI,QAA9B,IAAyC,KAAKN,KAAL,CAAWU,QAApD,CADF,CADF;;;AAKD,GA1CD,C,kBAHmBb,O,CAAAA,O,CAOZc,iB,GAAoB,EACzBR,OAAO,oBAAUS,MADQ,E","file":"Wrapper.js","sourcesContent":["// @flow\n\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport EventListener from 'react-event-listener'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport getWrapperRbCtx from '../../_configuration/urb-base-webapp/getWrapperRbCtx'\nimport createMUITheme from '../../_configuration/urb-base-webapp/createMUITheme'\nimport ViewportDimensions from '../scripts/ViewportDimensions'\n\nexport default class Wrapper extends React.Component<\n  { siteConfiguration: Object, children: any },\n  any,\n> {\n  muiTheme: Object\n  rbCtx: Object\n\n  static childContextTypes = {\n    rbCtx: PropTypes.object,\n  }\n\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    // TODO x0100 If a property for innerWidth is provided, use it for the initial request\n\n    // Descendants can add other items to rbCtx through getWrapperRbCtx\n    this.rbCtx = getWrapperRbCtx( props.siteConfiguration )\n\n    this.rbCtx.viewportDimensions = new ViewportDimensions()\n    this.rbCtx.siteConfiguration = props.siteConfiguration\n\n    this.muiTheme = createMUITheme( this )\n  }\n\n  componentDidMount() {\n    this.handle_onResize() // Will populate the data structures for dimensions with current values\n  }\n\n  getChildContext() {\n    return {\n      rbCtx: this.rbCtx,\n    }\n  }\n\n  handle_onResize = () => {\n    this.rbCtx.viewportDimensions.handle_onResize()\n  }\n\n  render() {\n    return (\n      <EventListener target=\"window\" onResize={this.handle_onResize}>\n        <MuiThemeProvider theme={this.muiTheme}>{this.props.children}</MuiThemeProvider>\n      </EventListener>\n    )\n  }\n}\n"]}