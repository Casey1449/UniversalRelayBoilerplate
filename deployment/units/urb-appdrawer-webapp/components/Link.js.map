{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/Link.jsx"],"names":["styles","theme","root","color","textDecoration","primary","palette","secondary","A400","Link","Component","render","props","component","ComponentProp","classes","className","variant","to","other"],"mappings":";;AAEA,8B;AACA,wC;AACA;AACA,4C;;AAEA,MAAMA,SAASC,UAAU;AACvBC,QAAM;AACJC,WAAO,SADH;AAEJC,oBAAgB,MAFZ;AAGJ,eAAW;AACTA,sBAAgB,WADP,EAHP,EADiB;;;AAQvBC,WAAS;AACPF,WAAOF,MAAMK,OAAN,CAAcD,OAAd,CAAsB,GAAtB,CADA,EARc;;AAWvBE,aAAW;AACTJ,WAAOF,MAAMK,OAAN,CAAcC,SAAd,CAAwBC,IADtB,EAXY,EAAV,CAAf;;;;AAgBA,MAAMC,IAAN,SAAmB,gBAAMC;;;;;;AAMtB;AACDC,SAAQC,KAAR,EAAgB;AACd;;;;;;;AAOI,SAAKA,KAPT,CAAM,EACJC,WAAWC,aADP,EAEJC,OAFI,EAGJC,SAHI,EAIJC,OAJI,EAKJC,EALI,EAAN,UAMKC,KANL;;AASA,QAAIT,SAAJ;;AAEA,QAAKI,aAAL,EAAqB;AACnBJ,kBAAYI,aAAZ;AACD,KAFD,MAEO,IAAKI,EAAL,EAAU;AACfR;AACD,KAFM,MAEA;AACLA,kBAAY,GAAZ;AACD;;AAED;AACE,oCAAC,SAAD;AACE,YAAIQ,EADN;AAEE,mBAAW;AACTH,gBAAQb,IADC;AAET;AACE,WAACa,QAAQV,OAAT,GAAmBY,YAAY,SADjC;AAEE,WAACF,QAAQR,SAAT,GAAqBU,YAAY,WAFnC,EAFS;;AAMTD,iBANS,CAFb;;AAUMG,WAVN,EADF;;;AAcD,GAnCA,C;;;AAsCY,wBAAYnB,MAAZ,EAAsBS,IAAtB,C","file":"Link.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport classNames from 'classnames'\nimport { Link as LinkRouter } from 'found'\nimport { withStyles } from 'material-ui/styles'\n\nconst styles = theme => ({\n  root: {\n    color: 'inherit',\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  primary: {\n    color: theme.palette.primary[500],\n  },\n  secondary: {\n    color: theme.palette.secondary.A400,\n  },\n})\n\nclass Link extends React.Component<{\n  classes: Object,\n  className: string,\n  component: string | Function,\n  to: string,\n  variant: 'primary' | 'secondary'\n}> {\n  render( props ) {\n    const {\n      component: ComponentProp,\n      classes,\n      className,\n      variant,\n      to,\n      ...other\n    } = this.props\n\n    let Component\n\n    if ( ComponentProp ) {\n      Component = ComponentProp\n    } else if ( to ) {\n      Component = LinkRouter\n    } else {\n      Component = 'a'\n    }\n\n    return (\n      <Component\n        to={to}\n        className={classNames(\n          classes.root,\n          {\n            [classes.primary]: variant === 'primary',\n            [classes.secondary]: variant === 'secondary',\n          },\n          className\n        )}\n        {...other}\n      />\n    )\n  }\n}\n\nexport default withStyles( styles )( Link )\n"]}