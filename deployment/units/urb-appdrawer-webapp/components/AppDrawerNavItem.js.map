{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/AppDrawerNavItem.jsx"],"names":["styles","theme","button","mixins","gutters","borderRadius","justifyContent","textTransform","width","transition","transitions","create","duration","shortest","textDecoration","navItem","typography","body2","display","paddingTop","paddingBottom","navLink","fontWeight","fontWeightRegular","navLinkButton","color","palette","text","secondary","textIndent","fontSize","activeButton","primary","AppDrawerNavItem","Component","state","open","handleClick","setState","componentWillMount","props","openImmediately","render","children","classes","title","to","onClick","defaultProps"],"mappings":";;AAEA,wC;AACA,8B;AACA,4C;AACA,4D;AACA;AACA;;AAEA,8B;;AAEA,MAAMA,SAASC,UAAU;AACvBC,UAAQD,MAAME,MAAN,CAAaC,OAAb,CAAqB;AAC3BC,kBAAc,CADa;AAE3BC,oBAAgB,YAFW;AAG3BC,mBAAe,MAHY;AAI3BC,WAAO,MAJoB;AAK3BC,gBAAYR,MAAMS,WAAN,CAAkBC,MAAlB,CAA0B,kBAA1B,EAA8C;AACxDC,gBAAUX,MAAMS,WAAN,CAAkBE,QAAlB,CAA2BC,QADmB,EAA9C,CALe;;AAQ3B,eAAW;AACTC,sBAAgB,MADP,EARgB,EAArB,CADe;;;AAavBC;AACKd,QAAMe,UAAN,CAAiBC,KADtB;AAEEC,aAAS,OAFX;AAGEC,gBAAY,CAHd;AAIEC,mBAAe,CAJjB,GAbuB;;AAmBvBC,WAAS;AACPC,gBAAYrB,MAAMe,UAAN,CAAiBO,iBADtB;AAEPL,aAAS,MAFF;AAGPC,gBAAY,CAHL;AAIPC,mBAAe,CAJR,EAnBc;;AAyBvBI,iBAAe;AACbC,WAAOxB,MAAMyB,OAAN,CAAcC,IAAd,CAAmBC,SADb;AAEbC,gBAAY,EAFC;AAGbC,cAAU,EAHG,EAzBQ;;AA8BvBC,gBAAc;AACZN,WAAOxB,MAAMyB,OAAN,CAAcC,IAAd,CAAmBK,OADd,EA9BS,EAAV,CAAf;;;;AAmCA,MAAMC,gBAAN,SAA+B,gBAAMC;;;;;;;;;;AAUnC;;;;;AAKAC,SALA,GAKQ;AACNC,YAAM,KADA,EALR;;;;;;;;;AAeAC,eAfA,GAec,MAAM;AAClB,WAAKC,QAAL,CAAc,EAAEF,MAAM,CAAC,KAAKD,KAAL,CAAWC,IAApB,EAAd;AACD,KAjBD,SASAG,qBAAqB,CACnB,IAAK,KAAKC,KAAL,CAAWC,eAAhB,EAAkC,CAChC,KAAKH,QAAL,CAAc,EAAEF,MAAM,IAAR,EAAd,EACD,CACF;;AAMDM,WAAS;AACP,UAAM,EAAEC,QAAF,EAAYC,OAAZ,EAAqBC,KAArB,EAA4BC,EAA5B,KAAmC,KAAKN,KAA9C;;AAEA,QAAKM,EAAL,EAAU;AACR;AACE,wDAAU,WAAWF,QAAQvB,OAA7B,EAAsC,oBAAtC;AACE;AACE,uCADF;AAEE,kBAAIyB,EAFN;AAGE,yBAAW,0BAAYF,QAAQ1C,MAApB,EAA4B0C,QAAQpB,aAApC,CAHb;AAIE,+BAAiBoB,QAAQb,YAJ3B;AAKE,iCALF;AAME,uBAAS,KAAKS,KAAL,CAAWO,OANtB;;AAQGF,iBARH,CADF,CADF;;;;AAcD;;AAED;AACE,sDAAU,WAAWD,QAAQ7B,OAA7B,EAAsC,oBAAtC;AACE,0DAAQ,WAAW6B,QAAQ1C,MAA3B,EAAmC,SAAS,KAAKmC,WAAjD;AACGQ,eADH,CADF;;AAIE,4DAAU,MAAI,KAAKV,KAAL,CAAWC,IAAzB,EAA+B,oBAAmB,MAAlD,EAAyD,mBAAzD;AACGO,kBADH,CAJF,CADF;;;;AAUD,GAjDD,CAVIV,gB,CAWGe,Y,GAAe,EACpBP,iBAAiB,KADG,E;;;AAmDT,wBAAYzC,MAAZ,EAAsBiC,gBAAtB,C","file":"AppDrawerNavItem.js","sourcesContent":["// @flow\n\nimport classNames from 'classnames'\nimport React from 'react'\nimport Button from 'material-ui/Button'\nimport Collapse from 'material-ui/transitions/Collapse'\nimport { withStyles } from 'material-ui/styles'\nimport { ListItem } from 'material-ui/List'\n\nimport Link from './Link'\n\nconst styles = theme => ({\n  button: theme.mixins.gutters({\n    borderRadius: 0,\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    width: '100%',\n    transition: theme.transitions.create( 'background-color', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  }),\n  navItem: {\n    ...theme.typography.body2,\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLink: {\n    fontWeight: theme.typography.fontWeightRegular,\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  navLinkButton: {\n    color: theme.palette.text.secondary,\n    textIndent: 24,\n    fontSize: 13,\n  },\n  activeButton: {\n    color: theme.palette.text.primary,\n  },\n})\n\nclass AppDrawerNavItem extends React.Component<\n  {\n    children: Object,\n    classes: Object,\n    onClick: Function,\n    openImmediately: boolean,\n    title: string,\n    to: string\n  },\n  { open: boolean }\n> {\n  static defaultProps = {\n    openImmediately: false,\n  }\n\n  state = {\n    open: false,\n  }\n\n  componentWillMount() {\n    if ( this.props.openImmediately ) {\n      this.setState({ open: true })\n    }\n  }\n\n  handleClick = () => {\n    this.setState({ open: !this.state.open })\n  }\n\n  render() {\n    const { children, classes, title, to } = this.props\n\n    if ( to ) {\n      return (\n        <ListItem className={classes.navLink} disableGutters>\n          <Button\n            component={Link}\n            to={to}\n            className={classNames( classes.button, classes.navLinkButton )}\n            activeClassName={classes.activeButton}\n            disableRipple\n            onClick={this.props.onClick}\n          >\n            {title}\n          </Button>\n        </ListItem>\n      )\n    }\n\n    return (\n      <ListItem className={classes.navItem} disableGutters>\n        <Button className={classes.button} onClick={this.handleClick}>\n          {title}\n        </Button>\n        <Collapse in={this.state.open} transitionDuration=\"auto\" unmountOnExit>\n          {children}\n        </Collapse>\n      </ListItem>\n    )\n  }\n}\n\nexport default withStyles( styles )( AppDrawerNavItem )\n"]}