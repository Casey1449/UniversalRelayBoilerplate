{"version":3,"sources":["../../../../units/urb-appdrawer-webapp/components/AppFrame.jsx"],"names":["styles","theme","html","boxSizing","body","margin","background","palette","default","color","text","primary","lineHeight","overflowX","WebkitFontSmoothing","MozOsxFontSmoothing","img","maxWidth","height","width","appFrame","display","alignItems","minHeight","grow","flex","title","marginLeft","appBar","transition","transitions","create","breakpoints","up","drawer","appBarShift","navIconHide","AppFrame","constructor","props","context","handleDrawerClose","setState","drawerOpen","handleDrawerToggle","state","render","children","classes","Viewer","drawerDocked","appBarClassName","navIconClassName","icon","appBarHome"],"mappings":";;AAEA,4C;AACA,oD;AACA,8C;AACA,8B;AACA;AACA;AACA,8C;AACA,oD;;AAEA,qG;;AAEA,wC;;AAEA,MAAMA,SAASC,UAAU;AACvB,aAAW;AACTC,UAAM;AACJC,iBAAW,YADP,EADG;;AAIT,4BAAwB;AACtBA,iBAAW,SADW,EAJf;;AAOTC,UAAM;AACJC,cAAQ,CADJ;AAEJC,kBAAYL,MAAMM,OAAN,CAAcD,UAAd,CAAyBE,OAFjC;AAGJC,aAAOR,MAAMM,OAAN,CAAcG,IAAd,CAAmBC,OAHtB;AAIJC,kBAAY,KAJR;AAKJC,iBAAW,QALP;AAMJC,2BAAqB,aANjB,EAMgC;AACpCC,2BAAqB,WAPjB,CAO8B;AAP9B,KAPG;AAgBTC,SAAK;AACHC,gBAAU,MADP;AAEHC,cAAQ,MAFL;AAGHC,aAAO,MAHJ,EAhBI,EADY;;;AAuBvBC,YAAU;AACRC,aAAS,MADD;AAERC,gBAAY,SAFJ;AAGRC,eAAW,OAHH;AAIRJ,WAAO,MAJC,EAvBa;;AA6BvBK,QAAM;AACJC,UAAM,UADF,EA7BiB;;AAgCvBC,SAAO;AACLC,gBAAY,EADP;AAELF,UAAM,UAFD,EAhCgB;;AAoCvBG,UAAQ;AACNC,gBAAY5B,MAAM6B,WAAN,CAAkBC,MAAlB,CAA0B,OAA1B,CADN,EApCe;;AAuCvB;AACA;AACA;AACA;AACA,GAAC9B,MAAM+B,WAAN,CAAkBC,EAAlB,CAAsB,IAAtB,CAAD,GAAgC;AAC9BC,YAAQ;AACNf,aAAO,OADD,EADsB;;AAI9BgB,iBAAa;AACXhB,aAAO,oBADI,EAJiB;;AAO9BiB,iBAAa;AACXf,eAAS,MADE,EAPiB,EA3CT,EAAV,CAAf;;;;;AAwDA,MAAMgB,QAAN,0BAA+D;AAC7DC,cAAaC,KAAb,EAA4BC,OAA5B,EAA8C;AAC5C,UAAOD,KAAP,EAAcC,OAAd,EAD4C;;;;;AAM9CC,qBAN8C,GAM1B,MAAM;AACxB,WAAKC,QAAL,CAAc,EAAEC,YAAY,KAAd,EAAd;AACD,KAR6C;;AAU9CC,sBAV8C,GAUzB,MAAM;AACzB,WAAKF,QAAL,CAAc,EAAEC,YAAY,CAAC,KAAKE,KAAL,CAAWF,UAA1B,EAAd;AACD,KAZ6C,CAG5C,KAAKE,KAAL,GAAa,EAAEF,YAAY,KAAd,EAAb,CACD;;AAUDG,WAAS;AACP,UAAM,EAAEC,QAAF,EAAYC,OAAZ,EAAqBC,MAArB,KAAgC,KAAKV,KAA3C;;AAEA,QAAIW,eAAe,KAAnB;;AAEA,QAAIC,kBAAkBH,QAAQpB,MAA9B;AACA,QAAIwB,mBAAmBJ,QAAQK,IAA/B;;AAEA,QAAKH,YAAL,EAAoB;AAClBE,0BAAqB,IAAGJ,QAAQZ,WAAY,EAA5C;AACAe,yBAAoB,IAAGH,QAAQb,WAAY,EAA3C;AACD,KAHD,MAGO;AACLgB,yBAAoB,IAAGH,QAAQM,UAAW,EAA1C;AACD;;AAED,UAAM5B,QAAQ,aAAd;;AAEA;AACE,6CAAK,WAAWsB,QAAQ5B,QAAxB;AACE,0DAAQ,WAAW+B,eAAnB;AACE;AACE;AACE,uBAAM,UADR;AAEE,yBAAS,KAAKP,kBAFhB;AAGE,2BAAWQ,gBAHb;;AAKE,iEALF,CADF;;AAQG1B,sBAAU,IAAV;AACC;AACE,2BAAWsB,QAAQtB,KADrB;AAEE,sBAAK,OAFP;AAGE,uBAAM,SAHR;AAIE,4BAJF;;AAMGA,mBANH,CATJ;;;AAkBE,mDAAK,WAAWsB,QAAQxB,IAAxB,GAlBF;AAmBE,yEAAmB,QAAQyB,MAA3B,GAnBF,CADF,CADF;;;AAwBE;AACE,qBAAWD,QAAQd,MADrB;AAEE,kBAAQgB,YAFV;AAGE,0BAAgB,KAAKT,iBAHvB;AAIE,gBAAMS,gBAAgB,KAAKL,KAAL,CAAWF,UAJnC,GAxBF;;AA8BGI,gBA9BH,CADF;;;AAkCD,GAlE4D,C;;;AAqEhD;AACb,wBAAY/C,MAAZ,EAAsBqC,QAAtB,CADa,uF","file":"AppFrame.js","sourcesContent":["// @flow\n\nimport AppBar from 'material-ui/AppBar'\nimport IconButton from 'material-ui/IconButton'\nimport MenuIcon from 'material-ui-icons/Menu'\nimport React, { Component } from 'react'\nimport { createFragmentContainer, graphql } from 'react-relay'\nimport { withStyles } from 'material-ui/styles'\nimport Toolbar from 'material-ui/Toolbar'\nimport Typography from 'material-ui/Typography'\n\nimport NavBarLoginButton from '../../urb-account-management-webapp/components/NavBarLoginButton'\n\nimport AppDrawer from './AppDrawer'\n\nconst styles = theme => ({\n  '@global': {\n    html: {\n      boxSizing: 'border-box',\n    },\n    '*, *:before, *:after': {\n      boxSizing: 'inherit',\n    },\n    body: {\n      margin: 0,\n      background: theme.palette.background.default,\n      color: theme.palette.text.primary,\n      lineHeight: '1.2',\n      overflowX: 'hidden',\n      WebkitFontSmoothing: 'antialiased', // Antialiasing.\n      MozOsxFontSmoothing: 'grayscale', // Antialiasing.\n    },\n    img: {\n      maxWidth: '100%',\n      height: 'auto',\n      width: 'auto',\n    },\n  },\n  appFrame: {\n    display: 'flex',\n    alignItems: 'stretch',\n    minHeight: '100vh',\n    width: '100%',\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n  title: {\n    marginLeft: 24,\n    flex: '0 1 auto',\n  },\n  appBar: {\n    transition: theme.transitions.create( 'width' ),\n  },\n  // appBarHome: {\n  //   backgroundColor: 'transparent',\n  //   boxShadow: 'none',\n  // },\n  [theme.breakpoints.up( 'lg' )]: {\n    drawer: {\n      width: '250px',\n    },\n    appBarShift: {\n      width: 'calc(100% - 250px)',\n    },\n    navIconHide: {\n      display: 'none',\n    },\n  },\n})\n\nclass AppFrame extends Component<any, { drawerOpen: boolean }> {\n  constructor( props: Object, context: Object ) {\n    super( props, context )\n\n    this.state = { drawerOpen: false }\n  }\n\n  handleDrawerClose = () => {\n    this.setState({ drawerOpen: false })\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ drawerOpen: !this.state.drawerOpen })\n  }\n\n  render() {\n    const { children, classes, Viewer } = this.props\n\n    let drawerDocked = false\n\n    let appBarClassName = classes.appBar\n    let navIconClassName = classes.icon\n\n    if ( drawerDocked ) {\n      navIconClassName += ` ${classes.navIconHide}`\n      appBarClassName += ` ${classes.appBarShift}`\n    } else {\n      appBarClassName += ` ${classes.appBarHome}`\n    }\n\n    const title = 'Hello World'\n\n    return (\n      <div className={classes.appFrame}>\n        <AppBar className={appBarClassName}>\n          <Toolbar>\n            <IconButton\n              color=\"contrast\"\n              onClick={this.handleDrawerToggle}\n              className={navIconClassName}\n            >\n              <MenuIcon />\n            </IconButton>\n            {title !== null && (\n              <Typography\n                className={classes.title}\n                type=\"title\"\n                color=\"inherit\"\n                noWrap\n              >\n                {title}\n              </Typography>\n            )}\n            <div className={classes.grow} />\n            <NavBarLoginButton Viewer={Viewer} />\n          </Toolbar>\n        </AppBar>\n        <AppDrawer\n          className={classes.drawer}\n          docked={drawerDocked}\n          onRequestClose={this.handleDrawerClose}\n          open={drawerDocked || this.state.drawerOpen}\n        />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default createFragmentContainer(\n  withStyles( styles )( AppFrame ),\n  graphql`\n    fragment AppFrame_Viewer on Viewer {\n      UserToken2\n      ...NavBarLoginButton_Viewer\n    }\n  `\n)\n"]}