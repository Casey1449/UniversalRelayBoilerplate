{"version":3,"sources":["../../../../units/urb-example-todo-client/relay/ToDoUpdateStatusMutation.js"],"names":["mutation","sharedUpdater","store","user","proxyToDo","userProxy","get","id","status","getValue","connection","getConnection","deleteNode","commit","environment","aToDo","ToDo_Complete","variables","input","updater","payload","getRootField","getLinkedRecord","optimisticUpdater","setValue","ToDo_CompletedCount"],"mappings":";;AAEA;AACA,6C,CAHA;;AAKA,MAAMA,4FAAN;;;;;;;;;;;;;;;AAeA,SAASC,aAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAiD;AAC/C;AACA;AACA,QAAMC,YAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,QAAMC,SAASJ,UAAUK,QAAV,CAAoB,UAApB,IAAmC,QAAnC,GAA8C,WAA7D;AACA,QAAMC,aAAa,gCAAkBC,aAAlB;AACjBN,WADiB;AAEjB,kBAFiB;AAGjB,IAAEG,MAAF,EAHiB,CAAnB;;AAKA,MAAKE,UAAL,EAAkB;AAChB,oCAAkBE,UAAlB,CAA8BF,UAA9B,EAA0CN,UAAUK,QAAV,CAAoB,IAApB,CAA1C;AACD;AACF;;AAED,SAASI,MAAT,CAAiBC,WAAjB,EAA8BX,IAA9B,EAAoCY,KAApC,EAA2CC,aAA3C,EAA2D;AACzD,SAAO,gCAAgBF,WAAhB,EAA6B;AAClCd,YADkC;AAElCiB,eAAW;AACTC,aAAO,EAAEX,IAAIQ,MAAMR,EAAZ,EAAgBS,aAAhB,EADE,EAFuB;;;AAMlCG,YAASjB,KAAT,EAAiB;AACf,YAAMkB,UAAUlB,MAAMmB,YAAN,CAAoB,kBAApB,CAAhB;AACApB,oBAAeC,KAAf,EAAsBC,IAAtB,EAA4BiB,QAAQE,eAAR,CAAyB,MAAzB,CAA5B;AACD,KATiC;;AAWlCC,sBAAmBrB,KAAnB,EAA2B;AACzB,YAAME,YAAYF,MAAMI,GAAN,CAAWS,MAAMR,EAAjB,CAAlB;AACAH,gBAAUoB,QAAV,CAAoBR,aAApB,EAAmC,UAAnC;AACAf,oBAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,SAA5B;;AAEA,YAAMC,YAAYH,MAAMI,GAAN,CAAWH,KAAKI,EAAhB,CAAlB;AACA,YAAMkB,sBAAsBpB,UAAUI,QAAV,CAAoB,qBAApB,CAA5B;AACA,UAAKgB,uBAAuB,IAA5B,EAAmC;AACjCpB,kBAAUmB,QAAV;AACEC,+BAAwBT,gBAAgB,CAAhB,GAAoB,CAAC,CAA7C,CADF;AAEE,6BAFF;;AAID;AACF,KAxBiC,EAA7B,CAAP;;AA0BD,C;;AAEc,EAAEH,MAAF,E","file":"ToDoUpdateStatusMutation.js","sourcesContent":["// @flow weak\n\nimport { commitMutation, graphql } from 'react-relay'\nimport { ConnectionHandler } from 'relay-runtime'\n\nconst mutation = graphql`\n  mutation ToDoUpdateStatusMutation($input: ToDoUpdateStatusInput!) {\n    ToDoUpdateStatus(input: $input) {\n      Viewer {\n        id\n        ToDo_CompletedCount\n      }\n      ToDo {\n        id\n        ToDo_Complete\n      }\n    }\n  }\n`\n\nfunction sharedUpdater( store, user, proxyToDo ) {\n  // In principle this could add to the active connection, but such an\n  // interaction is not possible from the front end.\n  const userProxy = store.get( user.id )\n  const status = proxyToDo.getValue( 'complete' ) ? 'active' : 'completed'\n  const connection = ConnectionHandler.getConnection(\n    userProxy,\n    'ToDoList_ToDos',\n    { status }\n  )\n  if ( connection ) {\n    ConnectionHandler.deleteNode( connection, proxyToDo.getValue( 'id' ) )\n  }\n}\n\nfunction commit( environment, user, aToDo, ToDo_Complete ) {\n  return commitMutation( environment, {\n    mutation,\n    variables: {\n      input: { id: aToDo.id, ToDo_Complete },\n    },\n\n    updater( store ) {\n      const payload = store.getRootField( 'ToDoUpdateStatus' )\n      sharedUpdater( store, user, payload.getLinkedRecord( 'ToDo' ) )\n    },\n\n    optimisticUpdater( store ) {\n      const proxyToDo = store.get( aToDo.id )\n      proxyToDo.setValue( ToDo_Complete, 'complete' )\n      sharedUpdater( store, user, proxyToDo )\n\n      const userProxy = store.get( user.id )\n      const ToDo_CompletedCount = userProxy.getValue( 'ToDo_CompletedCount' )\n      if ( ToDo_CompletedCount != null ) {\n        userProxy.setValue(\n          ToDo_CompletedCount + ( ToDo_Complete ? 1 : -1 ),\n          'ToDo_CompletedCount'\n        )\n      }\n    },\n  })\n}\n\nexport default { commit }\n"]}